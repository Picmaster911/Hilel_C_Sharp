add-migration Name
update-database
Remove-Migration

обязательно 
/  Database.EnsureDeleted();   // удаляем бд со старой схемой
// Database.EnsureCreated();   // создаем бд с новой схемой


SELECT * FROM Plc_Conections
TRUNCATE TABLE Plc_Conections

Жадная загрузка

using (Context db = new Context())
{
	Team team = db.Teams
	.Include (t => t.Players)     //  Players колекция в тим связанная вторичным ключем  c Teams 		 
          .ThenInclude (p => p.Country) //  Country колекция в Players связанная вторичным ключем c Country
}

  public class Team
  {
      public int Id { get; set; }
      public string Name { get; set; }
      public List <Player> Players{ get; set;}
  }


  public class Player
  {
      public int Id { get; set; }
      public string Name { get; set; }
      public int TeamId { get; set; }   
      public Team Team { get; set; }    -вторичный ключ TeamId  должен состоять из Team+Id   
  }

CREATE TABLE [dbo].[Pls_Tags] (
    [Id]              INT     IDENTITY (1, 1) NOT NULL,
    [DataType]        INT     NOT NULL,
    [VarType]         INT     NOT NULL,
    [DB]              INT     NOT NULL,
    [StartByteAdr]    INT     NOT NULL,
    [BitAdr]          TINYINT NOT NULL,
    [Count]           INT     NOT NULL,
    [PLC_ConectionId] INT     DEFAULT ((0)) NOT NULL,
    CONSTRAINT [PK_Pls_Tags] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [FK_Pls_Tags_Plc_Conections_PLC_ConectionId] FOREIGN KEY ([PLC_ConectionId]) REFERENCES [dbo].[Plc_Conections] ([Id]) ON DELETE CASCADE // удалить связанные елементы 